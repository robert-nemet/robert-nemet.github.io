<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kubernetes on DevCube</title>
    <link>https://rnemet.dev/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on DevCube</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Mar 2025 19:23:56 +0100</lastBuildDate>
    <atom:link href="https://rnemet.dev/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes tools: Kubectl Part 2</title>
      <link>https://rnemet.dev/posts/practical_k8s/k8s_intro_kubectl_pt2/</link>
      <pubDate>Mon, 03 Mar 2025 19:23:56 +0100</pubDate>
      <guid>https://rnemet.dev/posts/practical_k8s/k8s_intro_kubectl_pt2/</guid>
      <description>&lt;p&gt;This post is the fifth part of the series about Kubernetes for beginners. In the
&lt;a href=&#34;https://rnemet.dev/practical_k8s/k8s_intro_pt4&#34;&gt;fourth part&lt;/a&gt;, I started to write about the Kubernetes
Swiss army knife: &lt;code&gt;kubectl&lt;/code&gt;. I covered ways how to find the components you are looking
for. In this episode, I&amp;rsquo;ll show you how you can gather more information about Kubernetes
components, focusing on status and logs. This can be useful when debugging your
application and trying to figure out what&amp;rsquo;s going on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes tool: Kubectl</title>
      <link>https://rnemet.dev/posts/practical_k8s/k8s_intro_local_and_kubectl/</link>
      <pubDate>Mon, 17 Feb 2025 19:07:47 +0100</pubDate>
      <guid>https://rnemet.dev/posts/practical_k8s/k8s_intro_local_and_kubectl/</guid>
      <description>&lt;p&gt;This post is the fourth part of the series about Kubernetes for beginners. In the
&lt;a href=&#34;https://rnemet.dev/practical_k8s/k8s_intro_pt3&#34;&gt;third part&lt;/a&gt;, I wrote about services(SVC) and horizontal
pod autoscaler(HPA). This post will introduce you to the Kubernetes tool: &lt;code&gt;kubectl&lt;/code&gt;.
Also, all examples were shallow so far; to get you started with Kubernetes, you need
to get a feeling of the K8s and their components. In this episode, I explain the
connections between Deployments and Pods, too.
Let&amp;rsquo;s start&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes: Exposing Services and Horizontal Pod Autoscaler</title>
      <link>https://rnemet.dev/posts/practical_k8s/k8s_intro_svc_hpa/</link>
      <pubDate>Thu, 06 Feb 2025 20:46:44 +0200</pubDate>
      <guid>https://rnemet.dev/posts/practical_k8s/k8s_intro_svc_hpa/</guid>
      <description>&lt;p&gt;This post is the third part of the series about Kubernetes for beginners. In the
&lt;a href=&#34;https://rnemet.dev/practical_k8s/k8s_intro_pt2&#34;&gt;second part&lt;/a&gt;, I introduced the K8s and its basic
components. In the second part, I discussed containers, pods, and deployments.
This post will discuss services(SVC) and horizontal pod autoscaler(HPA).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In this short post, I will discuss how to expose your services to the outside world
and scale your applications based on the load.&lt;/p&gt;
&lt;h2 id=&#34;exposing-deployments-services&#34;&gt;Exposing Deployments: Services&lt;/h2&gt;
&lt;p&gt;When you create a Deployment, you&amp;rsquo;ll get Pods running your app. So, start local K8s
cluster and deploy an app:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes: Containers, Pods and Deployments</title>
      <link>https://rnemet.dev/posts/practical_k8s/k8s_intro_containers_pods_deployments/</link>
      <pubDate>Sat, 01 Feb 2025 20:46:44 +0200</pubDate>
      <guid>https://rnemet.dev/posts/practical_k8s/k8s_intro_containers_pods_deployments/</guid>
      <description>&lt;p&gt;This post is the second part of the series about Kubernetes. In the &lt;a href=&#34;https://rnemet.dev/practical_k8s/k8s_intro&#34;&gt;first part&lt;/a&gt;,
we introduced the K8s and its basic concepts.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Before you start creating services or scaling apps, it&amp;rsquo;s essential to understand
the core components of Kubernetes. This post walks you through pods, containers,
and deploymentsâ€”what they are, how they work, and how they come together to keep
your apps running smoothly.&lt;/p&gt;
&lt;h2 id=&#34;local-setup&#34;&gt;Local Setup&lt;/h2&gt;
&lt;p&gt;To taste K8s, you do not need access to some fancy remote platform. You can test
and play with it on your own machine. Right now, there are a lot of solutions that
can help you run K8s locally:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes: A Gentle Introduction for Developers</title>
      <link>https://rnemet.dev/posts/practical_k8s/k8s_intro/</link>
      <pubDate>Tue, 28 Jan 2025 20:46:44 +0200</pubDate>
      <guid>https://rnemet.dev/posts/practical_k8s/k8s_intro/</guid>
      <description>&lt;p&gt;Diving into the world of Kubernetes doesn&amp;rsquo;t need to be intimidating. This post
will explain Kubernetes, why it matters, and how it fits into the modern
application landscape. By the end, you&amp;rsquo;ll understand its core purpose and how it
can make your development life more manageable.&lt;/p&gt;
&lt;p&gt;The target audience for this post is developers who are new to Kubernetes or those
who work on a product that uses Kubernetes but do not have a deep understanding of it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Docker Images Smaller, Rootless and Non-Shell for Kubernetes</title>
      <link>https://rnemet.dev/posts/docker/image_k8s/</link>
      <pubDate>Fri, 14 Apr 2023 15:43:46 +0200</pubDate>
      <guid>https://rnemet.dev/posts/docker/image_k8s/</guid>
      <description>&lt;p&gt;After building &lt;a href=&#34;https://rnemet.dev/posts/docker/building_image_fast/&#34;&gt;a Docker image faster&lt;/a&gt;, I wanted to build it for the K8s cluster. Running the container on
the local machine isn&amp;rsquo;t the same as running it on a cluster. I&amp;rsquo;m packaging a Go application in my example. But the same principles apply to any other language.&lt;/p&gt;
&lt;h2 id=&#34;starting-dockerfile&#34;&gt;Starting Dockerfile&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m starting with the following Dockerfile(Dockerfile_1):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ARG&lt;/span&gt; GO_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.20.3&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; golang:${GO_VERSION}-buster as builder&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; go.mod go.sum /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; go mod download -x&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; . /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; go build -o app&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; debian:buster&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder /app/app /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENTRYPOINT&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/app&amp;#34;&lt;/span&gt; ]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And I build it with the following command:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Practical k8s: Pods</title>
      <link>https://rnemet.dev/posts/practical_k8s/pods/</link>
      <pubDate>Mon, 24 Oct 2022 20:46:44 +0200</pubDate>
      <guid>https://rnemet.dev/posts/practical_k8s/pods/</guid>
      <description>&lt;p&gt;A Pod would be the smallest deployable unit one can create and manage inside Kubernetes(K8s). In practice, rarely you create a Pod directly.
Instead, one would create a Deployment, a StatefulSet, a DaemonSet, a Job, or a CronJob. These are higher-level constructs that would create
Pods for you.&lt;/p&gt;
&lt;p&gt;Here I&amp;rsquo;m covering common tasks that one would do with a Pod in daily work, like getting logs, opening a shell inside a container, debugging a Pod, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to make exclusive locks in Kubernetes</title>
      <link>https://rnemet.dev/posts/projects/klock_exclusive_lock/</link>
      <pubDate>Sat, 01 Oct 2022 18:58:02 +0200</pubDate>
      <guid>https://rnemet.dev/posts/projects/klock_exclusive_lock/</guid>
      <description>Klock: Exclusive Lock Primer</description>
    </item>
    <item>
      <title>Klock</title>
      <link>https://rnemet.dev/posts/projects/klock/</link>
      <pubDate>Wed, 07 Sep 2022 18:58:02 +0200</pubDate>
      <guid>https://rnemet.dev/posts/projects/klock/</guid>
      <description>Easy and eficent way to lock Kubernetes resource</description>
    </item>
    <item>
      <title>Kubernetes in the bottle: k3d and k3s</title>
      <link>https://rnemet.dev/posts/k3d/</link>
      <pubDate>Thu, 11 Mar 2021 22:40:14 +0100</pubDate>
      <guid>https://rnemet.dev/posts/k3d/</guid>
      <description>&lt;p&gt;Everyone wants to play with the Kubernetes(K8s). There are many options from Google, AWS, Heroku, etc. They offer free tiers that anyone can play with.
But what if you want to have your K8s. On your laptop, for fun or to learn something new, without any restrictions.&lt;/p&gt;
&lt;h2 id=&#34;what-is-k3s&#34;&gt;What is &lt;a href=&#34;https://k3s.io/&#34;&gt;k3s&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The K3s is lightweight k8s by &lt;a href=&#34;https://rancher.com/&#34;&gt;the rancher&lt;/a&gt; for Linux. K3s is intended to work with low resources and IoT devices.
So, it can easily run on laptops. It is packed as a single binary so it is easy to setup. It requires to have installed docker, as nodes will be run inside containers.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
