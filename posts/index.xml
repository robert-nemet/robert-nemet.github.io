<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on DevCube</title>
    <link>https://rnemet.dev/posts/</link>
    <description>Recent content in Posts on DevCube</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 23 Apr 2023 08:00:44 +0200</lastBuildDate><atom:link href="https://rnemet.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Is Outsourcing Killing Developers</title>
      <link>https://rnemet.dev/posts/office/coder_developer/</link>
      <pubDate>Sun, 23 Apr 2023 08:00:44 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/office/coder_developer/</guid>
      <description>I live and work in one of the Balkan countries, Belgrade, Serbia. After the sad &amp;rsquo;90s, all countries in the region try to catch up with the rest of the world. That led to a boom in IT. A large portion of IT is outsourcing companies. Some companies are domestic, and some are foreign. Also, some companies opened their R&amp;amp;D centers in the region. Small and big as well. There was and still is a large number of startups.</description>
    </item>
    
    <item>
      <title>Building Docker Images Smaller, Rootless and Non-Shell for Kubernetes</title>
      <link>https://rnemet.dev/posts/docker/image_k8s/</link>
      <pubDate>Fri, 14 Apr 2023 15:43:46 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/image_k8s/</guid>
      <description>After building a Docker image faster, I wanted to build it for the K8s cluster. Running the container on the local machine isn&amp;rsquo;t the same as running it on a cluster. I&amp;rsquo;m packaging a Go application in my example. But the same principles apply to any other language.
Starting Dockerfile I&amp;rsquo;m starting with the following Dockerfile(Dockerfile_1):
ARG GO_VERSION=1.20.3 FROM golang:${GO_VERSION}-buster as builder WORKDIR /app COPY go.mod go.sum /app/ RUN go mod download -x COPY .</description>
    </item>
    
    <item>
      <title>Building Docker Image Faster</title>
      <link>https://rnemet.dev/posts/docker/building_image_fast/</link>
      <pubDate>Sat, 08 Apr 2023 22:14:51 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/building_image_fast/</guid>
      <description>During building services, we often need to build docker images. We do it multiple times a day. It can be a time-consuming task. Locally we only notice it a little, but in CI/CD pipelines, it can be a problem.
In this post, I will show you how to speed up the process. I will show you how to use a cache, layer your Dockerfile, and use multi-stage builds, to make your builds faster.</description>
    </item>
    
    <item>
      <title>How to Create a Local Development Environment with Docker Compose</title>
      <link>https://rnemet.dev/posts/docker/local_development_environment/</link>
      <pubDate>Sat, 01 Apr 2023 11:32:11 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/local_development_environment/</guid>
      <description>As a developer, when working on a service, you face a problem with the working environment. And when I say working environment, I do not think about IDEs, stacks, OS, libraries, etc. Iâ€™m thinking about the environment where our services live.
These days, our services are usually packed inside some container and put in some kind of distributed system. Most containers and other moving parts are controlled by Kubernetes, Nomad, and similar orchestration systems.</description>
    </item>
    
    <item>
      <title>Example: API Metrics with Prometheus and Grafana</title>
      <link>https://rnemet.dev/posts/k8s/example_implement_metrics_api/</link>
      <pubDate>Tue, 28 Mar 2023 21:10:05 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/example_implement_metrics_api/</guid>
      <description>This post is a follow-up to the previous posts on designing metrics for event-driven systems. This humble post is a practical example of how to implement the metrics API and how to use it to create a dashboard in Grafana. I&amp;rsquo;m not using Kubernetes but Docker Compose; the concepts are the same. The reason is simplicity.
The code is available on this GitHub repository.
The Scenario The setup comprises two API services(app and beta) and a database(postgres).</description>
    </item>
    
    <item>
      <title>How to Design Metrics With Prometheus Metric Types: the USE Method</title>
      <link>https://rnemet.dev/posts/k8s/metrics_use_method/</link>
      <pubDate>Mon, 20 Mar 2023 20:38:42 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/metrics_use_method/</guid>
      <description>This is the third part of a series about designing metrics for event-driven systems. You can check the first part and the second part of this series before proceeding.
While I discussed the general principles of designing metrics in the first part, I explained Prometheus metric types in the second part. I applied them as the RED method in the second part. In this article, I&amp;rsquo;ll explain the USE method with Prometheus.</description>
    </item>
    
    <item>
      <title>How to Design Metrics With Prometheus Metric Types</title>
      <link>https://rnemet.dev/posts/k8s/metrics_types/</link>
      <pubDate>Wed, 08 Mar 2023 22:23:12 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/metrics_types/</guid>
      <description>This is the second part of a series about designing metrics for event-driven systems. You can check the first part of this series.
Prometheus is open source system for monitoring and alerting. It is a part of CNCF (Cloud Native Computing Foundation) and it is one of the most popular monitoring systems. You can say it is a de facto standard for monitoring in Kubernetes.
To design metrics with Prometheus, you need to understand its metric types.</description>
    </item>
    
    <item>
      <title>Understanding Event-Driven Metrics</title>
      <link>https://rnemet.dev/posts/k8s/metrics/</link>
      <pubDate>Wed, 01 Mar 2023 20:14:05 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/metrics/</guid>
      <description>Event-driven systems at the moment are dominating when it comes to software system design. Some of the characteristics of event-driven systems are asynchronous actions and eventual consistency.
In traditional systems, each call will produce an immediate response. While in event-driven systems(EDS) the response is not immediate but it is made when the system is ready to process a call. The EDS is not easy to debug or predict the next state.</description>
    </item>
    
    <item>
      <title>Deploying Database Changes For Microservices</title>
      <link>https://rnemet.dev/posts/k8s/deploy-liquibase/</link>
      <pubDate>Sat, 12 Feb 2022 20:14:05 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/deploy-liquibase/</guid>
      <description>When a service works with a database its core is tied with the database schema. Usually, that means that service models are represented in the database. Usually as tables, but not necessary.
Anyway, from that comes a requirement to update database schema when the core of service is changed. If you version your service then you should version your database schema as well. For this purpose, the Liquibase is a good tool(or at least one that I like).</description>
    </item>
    
    <item>
      <title>Docker-Compose: How To Rebuild Working Application</title>
      <link>https://rnemet.dev/posts/docker/compose-rebuild/</link>
      <pubDate>Wed, 02 Feb 2022 20:04:19 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/compose-rebuild/</guid>
      <description>While developing application and using docker-compose one question quickly arise:
How to properly rebuild application?
Once an image is built new one will not be built with the same tag as long it exists in a local cache. The compose builds an image it names it with the pattern &amp;lt;context&amp;gt;_&amp;lt;service_name&amp;gt;:latest.
Where:
Context is directory name where compose YAML is Service is service name in compose YAML file This means that you can stop or takedown the compose application, next time you run it your images will not be rebuilt if they already exist.</description>
    </item>
    
    <item>
      <title>Docker-Compose: What Every Developer Needs To Know</title>
      <link>https://rnemet.dev/posts/docker/compose-app/</link>
      <pubDate>Wed, 26 Jan 2022 22:12:24 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/compose-app/</guid>
      <description>If you are developing microservices, docker-compose(compose), can be a very powerful tool. Think of a case with an API service and database. Creating and maintaining a database with the use of the Liquibase.
Initial plan &amp;hellip;would be:
start DB run the Liquibase to make changes start an app Adding docker-compose as a driver to utilize this process:
sequenceDiagram autonumber Docker --&gt;&gt; PostgresDB: start PostgresDB --&gt;&gt; PostgresDB: wait to finish start PostgresDB --&gt;&gt; Docker: done Docker --&gt;&gt; LiquibasePG: start LiquibasePGDB --&gt;&gt; PostgresDB: execute changeLog LiquibasePGDB --&gt;&gt; Docker: done Docker --&gt;&gt; Echo: start PostgresDB Setup This is the simplest step.</description>
    </item>
    
    <item>
      <title>Docker-Compose: Intro</title>
      <link>https://rnemet.dev/posts/docker/compose-intro/</link>
      <pubDate>Sat, 08 Jan 2022 13:42:10 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/compose-intro/</guid>
      <description>Working with containers is a necessity today for developers. You will likely need to work with some kind of storage or interact with some external service, like Solr or Postgres.
You can install the required service on your local machine, which comes with the burden of choosing the correct installation, configuration, etc&amp;hellip; Nothing too complicated but takes time.
Docker and Containers In short, the container is an isolated process on the host machine.</description>
    </item>
    
    <item>
      <title>Kubernetes in the bottle: k3d and k3s</title>
      <link>https://rnemet.dev/posts/k3d/</link>
      <pubDate>Thu, 11 Mar 2021 22:40:14 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k3d/</guid>
      <description>Everyone wants to play with the Kubernetes(K8s). There are many options from Google, AWS, Heroku, etc. They offer free tiers that anyone can play with. But what if you want to have your K8s. On your laptop, for fun or to learn something new, without any restrictions.
What is k3s The K3s is lightweight k8s by the rancher for Linux. K3s is intended to work with low resources and IoT devices.</description>
    </item>
    
    <item>
      <title>How to schedule task with crontab</title>
      <link>https://rnemet.dev/posts/schedule_tasks/</link>
      <pubDate>Mon, 15 Feb 2021 11:30:03 +0000</pubDate>
      
      <guid>https://rnemet.dev/posts/schedule_tasks/</guid>
      <description>I&amp;rsquo;m keeping notes in simple text files. Imho, this is a straightforward solution that I can control. I need to be able to version my changes and to keep backup as well. For that, I&amp;rsquo;m using git. But I have to make commits and push changes periodically. I&amp;rsquo;m delegating this simple, dull, and repetitive toil to the crontab.
Crontab ..is a file used by cron. It is a time-based job scheduler available in Unix-like OS.</description>
    </item>
    
    <item>
      <title>How to rename multiple files</title>
      <link>https://rnemet.dev/posts/rename_files/</link>
      <pubDate>Fri, 01 Jan 2021 11:30:03 +0000</pubDate>
      
      <guid>https://rnemet.dev/posts/rename_files/</guid>
      <description>A simple problem:
Rename files with extension xyz which names ends with file. They need to start with document- and have extension txt For example if a file is 1-file.xyz it should be renamed to document-1.txt
From this:
&amp;gt; ls -al total 0 drwxr-xr-x 12 owner staff 384 Jan 1 19:26 . drwxr-xr-x 7 owner staff 224 Oct 23 11:32 .. -rw-r--r-- 1 owner staff 0 Jan 1 19:26 1-file.xyz -rw-r--r-- 1 owner staff 0 Jan 1 19:26 10-file.</description>
    </item>
    
  </channel>
</rss>
