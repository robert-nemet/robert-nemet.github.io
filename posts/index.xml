<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on DevCube</title>
    <link>https://rnemet.dev/posts/</link>
    <description>Recent content in Posts on DevCube</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 Dec 2023 11:27:57 +0100</lastBuildDate>
    <atom:link href="https://rnemet.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating Pull Request Reviews With CodiumAI PR-Agent</title>
      <link>https://rnemet.dev/posts/ai/codium-pragent/</link>
      <pubDate>Sun, 10 Dec 2023 11:27:57 +0100</pubDate>
      <guid>https://rnemet.dev/posts/ai/codium-pragent/</guid>
      <description>&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;If you are a developer, you know how much time you spend on pull request reviews. We all try to write the best code we can. When we are done, we ask our
team members to review our code. Sometimes, making a pull request is more complex than it sounds. Over time, teams learn that pull requests need to be standardized to speed things up and improve
communication. That is why we have a pull request template, for example. Sometimes, even that is not enough. Because the speed
at which the code is sent out is increasing. More pull requests are created. And the number of pull requests that need to be reviewed is expanding. Ah&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring GCP With Terraform: Adding Terragrunt</title>
      <link>https://rnemet.dev/posts/gcp/gcp_tf_terragrunt/</link>
      <pubDate>Sun, 17 Sep 2023 08:54:32 +0200</pubDate>
      <guid>https://rnemet.dev/posts/gcp/gcp_tf_terragrunt/</guid>
      <description>Adding Terragrunt to Terraform project</description>
    </item>
    <item>
      <title>GCP With Terraform: Refactor with Modules</title>
      <link>https://rnemet.dev/posts/gcp/gcp_tf_refactor/</link>
      <pubDate>Tue, 05 Sep 2023 21:32:48 +0200</pubDate>
      <guid>https://rnemet.dev/posts/gcp/gcp_tf_refactor/</guid>
      <description>&lt;p&gt;This post is the fourth part of the series about using Terraform to manage GCP resources. In the &lt;a href=&#34;https://rnemet.dev/posts/gcp/start_with_gcp/&#34;&gt;first part&lt;/a&gt;, I did a basic setup of the project:
remote state file, state file encryption, a bucket creation. In the &lt;a href=&#34;https://rnemet.dev/posts/gcp/gcp-tf-vpc/&#34;&gt;second part&lt;/a&gt;, I created VPC and subnets and added some basic firewall rules
and VMs. In the &lt;a href=&#34;https://rnemet.dev/posts/gcp/gcp-tf-vpc-firewall_2/&#34;&gt;third part&lt;/a&gt;, I added more VPC, subnets, firewall rules, and VMs. In this part, I will refactor the project to make it more
manageable. It should be more DRY and easier to maintain while supporting multiple environments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring GCP With Terraform: VPC Firewall Rules, part 2</title>
      <link>https://rnemet.dev/posts/gcp/gcp_tf_vpc_firewall_2/</link>
      <pubDate>Mon, 28 Aug 2023 21:48:19 +0200</pubDate>
      <guid>https://rnemet.dev/posts/gcp/gcp_tf_vpc_firewall_2/</guid>
      <description>GCP Networking with Terraform, part 2: Firewall</description>
    </item>
    <item>
      <title>Exploring GCP With Terraform: VPCs, Firewall Rules And VMs</title>
      <link>https://rnemet.dev/posts/gcp/gcp_tf_vpc/</link>
      <pubDate>Sun, 20 Aug 2023 21:10:56 +0200</pubDate>
      <guid>https://rnemet.dev/posts/gcp/gcp_tf_vpc/</guid>
      <description>GCP Networking with Terraform, part 1</description>
    </item>
    <item>
      <title>Exploring GCP With Terraform: Setting Up The Environment And Project</title>
      <link>https://rnemet.dev/posts/gcp/start_with_gcp/</link>
      <pubDate>Wed, 16 Aug 2023 21:10:56 +0200</pubDate>
      <guid>https://rnemet.dev/posts/gcp/start_with_gcp/</guid>
      <description>&lt;p&gt;This topic is nothing new. There are many articles and tutorials on the internet about this. I&amp;rsquo;ll be setting up a Terraform project to explore GCP. I cover the basics of Terraform and GCP.&lt;/p&gt;
&lt;style type=&#34;text/css&#34;&gt;.notice{--root-color:#444;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#c33;--warning-content:#fee;--info-title:#fb7;--info-content:#fec;--note-title:#6be;--note-content:#e7f2fa;--tip-title:#5a5;--tip-content:#efe}@media (prefers-color-scheme:dark){.notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}}body.dark .notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:var(--root-color);background:var(--root-background)}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:var(--title-color);background:var(--title-background)}.notice.warning .notice-title{background:var(--warning-title)}.notice.warning{background:var(--warning-content)}.notice.info .notice-title{background:var(--info-title)}.notice.info{background:var(--info-content)}.notice.note .notice-title{background:var(--note-title)}.notice.note{background:var(--note-content)}.notice.tip .notice-title{background:var(--tip-title)}.notice.tip{background:var(--tip-content)}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:.125em;position:relative}&lt;/style&gt;
&lt;div&gt;&lt;svg width=&#34;0&#34; height=&#34;0&#34; display=&#34;none&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;symbol id=&#34;tip-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;note-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;warning-notice&#34; viewBox=&#34;0 0 576 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;info-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z&#34;/&gt;&lt;/symbol&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&#34;notice warning&#34; &gt;
&lt;p class=&#34;first notice-title&#34;&gt;&lt;span class=&#34;icon-notice baseline&#34;&gt;&lt;svg&gt;&lt;use href=&#34;#warning-notice&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Warning&lt;/p&gt;</description>
    </item>
    <item>
      <title>Task vs Make - Final Thoughts</title>
      <link>https://rnemet.dev/posts/tools/tasklist_final/</link>
      <pubDate>Tue, 08 Aug 2023 21:03:40 +0200</pubDate>
      <guid>https://rnemet.dev/posts/tools/tasklist_final/</guid>
      <description>&lt;p&gt;So, after spending time moving from &lt;em&gt;Make&lt;/em&gt; to &lt;em&gt;Task&lt;/em&gt;, I decided. I&amp;rsquo;m going with &lt;em&gt;Task&lt;/em&gt; in my future projects.
&lt;em&gt;Make&lt;/em&gt; will not be removed from my projects immediately, but I will not use it in the future. Let me tell you why.&lt;/p&gt;
&lt;p&gt;All this is my personal opinion. I&amp;rsquo;m not saying that &lt;em&gt;Task&lt;/em&gt; is better than &lt;em&gt;Make&lt;/em&gt;. I think that &lt;em&gt;Task&lt;/em&gt; is better for me.&lt;/p&gt;
&lt;h3 id=&#34;global-taskfile&#34;&gt;Global Taskfile&lt;/h3&gt;
&lt;p&gt;I have a global &lt;em&gt;Task&lt;/em&gt; in my home directory for standard stuff. It contains tasks to &lt;em&gt;update my tools&lt;/em&gt;, &lt;em&gt;run some diagnostics&lt;/em&gt;, etc.
Because it is global, it is accessible from any directory. For example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>WIP: Taskfile instead of Makefile?</title>
      <link>https://rnemet.dev/posts/tools/taskfile/</link>
      <pubDate>Sat, 29 Jul 2023 15:32:51 +0200</pubDate>
      <guid>https://rnemet.dev/posts/tools/taskfile/</guid>
      <description>&lt;p&gt;Recently, I stumbled upon a tool called &lt;a href=&#34;https://taskfile.dev/#/&#34;&gt;Taskfile&lt;/a&gt;. It is a task runner, similar to Makefile, but with many improvements. I decided to try it and see if it can replace my Makefiles.&lt;/p&gt;
&lt;h2 id=&#34;why-taskfile&#34;&gt;Why Taskfile?&lt;/h2&gt;
&lt;p&gt;First of all, Makefile is a good tool. Today, you can use it on any platform, not just Linux. It is a standard tool for running tasks. It is flexible and powerful. My relation with it is love/hate. It can be tricky to write a good Makefile or to debug it. Reading also can be a challenge. Because of that, when I found out about Taskfile, I decided to try it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning eBPF: Maps, Ring Buffers and Output</title>
      <link>https://rnemet.dev/posts/ebpf/output-ebpf/</link>
      <pubDate>Sat, 10 Jun 2023 12:53:57 +0200</pubDate>
      <guid>https://rnemet.dev/posts/ebpf/output-ebpf/</guid>
      <description>&lt;p&gt;I set the stage for learning &lt;a href=&#34;https://rnemet.dev/posts/ebpf/learn-ebpf&#34;&gt;eBPF&lt;/a&gt;. As mentioned in the previous post, eBPF is a technology that allows us to run code in the kernel.
This is a compelling technology, but it comes with a few limitations. One of them is that we can&amp;rsquo;t use the standard output to print messages. At least not directly. Let&amp;rsquo;s explore how we can do this.&lt;/p&gt;
&lt;h2 id=&#34;why-cant-i-use-the-standard-inputoutput&#34;&gt;Why can&amp;rsquo;t I use the standard input/output?&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s look at this picture &lt;img alt=&#34;ebpf-workflow&#34; loading=&#34;lazy&#34; src=&#34;https://rnemet.dev/images/eBPF-short-overview.jpg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning eBPF: Setting up the environment</title>
      <link>https://rnemet.dev/posts/ebpf/learn-ebpf/</link>
      <pubDate>Mon, 08 May 2023 09:40:16 +0200</pubDate>
      <guid>https://rnemet.dev/posts/ebpf/learn-ebpf/</guid>
      <description>&lt;p&gt;For a while, I&amp;rsquo;ve been following stuff around eBPF, and it is very promising. What I just wrote is an understatement. At first glance, eBPF is bringing many new possibilities to our toolbox.
You can start with performance profiling, tracing, security, networking, etc. But let&amp;rsquo;s start from the beginning.&lt;/p&gt;
&lt;p&gt;By the way, I&amp;rsquo;m doing this on OSX. For eBPF, you need Linux kernel 4.1 or newer. So, I&amp;rsquo;ll be running some VMs. This setup should be doable on Linux too. Code is available &lt;a href=&#34;https://github.com/robert-nemet/learn-ebpf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New Docker Goodies: Init and Watch</title>
      <link>https://rnemet.dev/posts/docker/new_stuff_init_watch/</link>
      <pubDate>Mon, 01 May 2023 21:32:54 +0200</pubDate>
      <guid>https://rnemet.dev/posts/docker/new_stuff_init_watch/</guid>
      <description>&lt;p&gt;Recently Docker brought some new stuff that I found very useful for developers. They are still in the experimental phase but are already very useful.
Try them and give your feedback to the Docker team. The code I&amp;rsquo;m using for this is &lt;a href=&#34;https://github.com/robert-nemet/docker-experiments&#34;&gt;available here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;init&#34;&gt;Init&lt;/h2&gt;
&lt;p&gt;Writing a &lt;em&gt;Dockerfile&lt;/em&gt; when starting with a new application is tedious. Why? Because we are repeating most of the stuff over and over again. So, in the
end, we reach to copy/paste solution. Of course, copy/paste needs to be modified to fit an application&amp;rsquo;s needs. I do not say that copy/paste is terrible, but with it,
we miss new stuff that Docker brings to us. Even seasoned developers miss stuff. If we do not do it every day, we forget. Because of that, the Docker team brought
us a new command called &lt;code&gt;init&lt;/code&gt;. The &lt;code&gt;init&lt;/code&gt; is not new but is still in beta. This time with more improvements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Is Outsourcing Killing Developers</title>
      <link>https://rnemet.dev/posts/office/coder_developer/</link>
      <pubDate>Sun, 23 Apr 2023 08:00:44 +0200</pubDate>
      <guid>https://rnemet.dev/posts/office/coder_developer/</guid>
      <description>&lt;p&gt;I live and work in one of the Balkan countries, Belgrade, Serbia. After the sad &amp;rsquo;90s, all countries in the region try to catch up
with the rest of the world. That led to a boom in IT. A large portion of IT is outsourcing companies. Some companies are domestic,
and some are foreign. Also, some companies opened their R&amp;amp;D centers in the region. Small and big as well. There was and still is
a large number of startups.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Docker Images Smaller, Rootless and Non-Shell for Kubernetes</title>
      <link>https://rnemet.dev/posts/docker/image_k8s/</link>
      <pubDate>Fri, 14 Apr 2023 15:43:46 +0200</pubDate>
      <guid>https://rnemet.dev/posts/docker/image_k8s/</guid>
      <description>&lt;p&gt;After building &lt;a href=&#34;https://rnemet.dev/posts/docker/building_image_fast/&#34;&gt;a Docker image faster&lt;/a&gt;, I wanted to build it for the K8s cluster. Running the container on
the local machine isn&amp;rsquo;t the same as running it on a cluster. I&amp;rsquo;m packaging a Go application in my example. But the same principles apply to any other language.&lt;/p&gt;
&lt;h2 id=&#34;starting-dockerfile&#34;&gt;Starting Dockerfile&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m starting with the following Dockerfile(Dockerfile_1):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ARG&lt;/span&gt; GO_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.20.3&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; golang:${GO_VERSION}-buster as builder&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; go.mod go.sum /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; go mod download -x&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; . /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; go build -o app&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; debian:buster&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder /app/app /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENTRYPOINT&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/app&amp;#34;&lt;/span&gt; ]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And I build it with the following command:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Docker Image Faster</title>
      <link>https://rnemet.dev/posts/docker/building_image_fast/</link>
      <pubDate>Sat, 08 Apr 2023 22:14:51 +0200</pubDate>
      <guid>https://rnemet.dev/posts/docker/building_image_fast/</guid>
      <description>&lt;p&gt;During building services, we often need to build docker images. We do it multiple times a day. It can be a time-consuming task. Locally we only notice it a little, but in CI/CD pipelines, it can be a problem.&lt;/p&gt;
&lt;p&gt;In this post, I will show you how to speed up the process. I will show you how to use a cache, layer your Dockerfile, and use multi-stage builds, to make your builds faster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Create a Local Development Environment with Docker Compose</title>
      <link>https://rnemet.dev/posts/docker/local_development_environment/</link>
      <pubDate>Sat, 01 Apr 2023 11:32:11 +0200</pubDate>
      <guid>https://rnemet.dev/posts/docker/local_development_environment/</guid>
      <description>&lt;p&gt;As a developer, when working on a service, you face a problem with the working environment. And when I say working environment, I do not think about IDEs, stacks, OS, libraries, etc. I’m thinking about the environment where our services live.&lt;/p&gt;
&lt;p&gt;These days, our services are usually packed inside some container and put in some kind of distributed system. Most containers and other moving parts are
controlled by Kubernetes, Nomad, and similar orchestration systems.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Example: API Metrics with Prometheus and Grafana</title>
      <link>https://rnemet.dev/posts/k8s/example_implement_metrics_api/</link>
      <pubDate>Tue, 28 Mar 2023 21:10:05 +0200</pubDate>
      <guid>https://rnemet.dev/posts/k8s/example_implement_metrics_api/</guid>
      <description>&lt;p&gt;This post is a follow-up to the previous posts on &lt;a href=&#34;https://rnemet.dev/tags/metrics/&#34;&gt;designing metrics for event-driven systems&lt;/a&gt;. This humble post is a practical example of how to implement the metrics API and how to use it to create a dashboard in Grafana.
I&amp;rsquo;m not using Kubernetes but Docker Compose; the concepts are the same. The reason is simplicity.&lt;/p&gt;
&lt;p&gt;The code is available on &lt;a href=&#34;https://github.com/robert-nemet/dc-playground&#34;&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-scenario&#34;&gt;The Scenario&lt;/h2&gt;
&lt;p&gt;The setup comprises two API services(&lt;code&gt;app&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt;) and a database(&lt;code&gt;postgres&lt;/code&gt;). Liquibase creates the database schema.
API services are two instances of the same service. They connect to the same database.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Design Metrics With Prometheus Metric Types: the USE Method</title>
      <link>https://rnemet.dev/posts/k8s/metrics_use_method/</link>
      <pubDate>Mon, 20 Mar 2023 20:38:42 +0100</pubDate>
      <guid>https://rnemet.dev/posts/k8s/metrics_use_method/</guid>
      <description>&lt;p&gt;This is the third part of a series about designing metrics for event-driven systems. You can check &lt;a href=&#34;https://rnemet.dev/posts/k8s/metrics/&#34;&gt;the first part&lt;/a&gt; and &lt;a href=&#34;https://rnemet.dev/posts/k8s/metrics_types/&#34;&gt;the second part&lt;/a&gt; of this series before
proceeding.&lt;/p&gt;
&lt;p&gt;While I discussed the general principles of designing metrics in the first part, I explained Prometheus
metric types in the second part. I applied them as the RED method in the second part. In this article, I&amp;rsquo;ll explain the USE method with Prometheus. Finally, a short discussion about the Four Golden Signals and a conclusion about all the methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Design Metrics With Prometheus Metric Types</title>
      <link>https://rnemet.dev/posts/k8s/metrics_types/</link>
      <pubDate>Wed, 08 Mar 2023 22:23:12 +0100</pubDate>
      <guid>https://rnemet.dev/posts/k8s/metrics_types/</guid>
      <description>&lt;p&gt;This is the second part of a series about designing metrics for event-driven systems. You can check &lt;a href=&#34;https://rnemet.dev/posts/k8s/metrics/&#34;&gt;the first part&lt;/a&gt; of this series.&lt;/p&gt;
&lt;p&gt;Prometheus is open source system for monitoring and alerting. It is a part of CNCF (Cloud Native Computing Foundation) and it is one of the most popular monitoring systems. You can say it is a de facto standard for monitoring in Kubernetes.&lt;/p&gt;
&lt;p&gt;To design metrics with Prometheus, you need to understand its metric types. In this article, I&amp;rsquo;ll explain Prometheus metric types and how to design metrics with them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Event-Driven Metrics</title>
      <link>https://rnemet.dev/posts/k8s/metrics/</link>
      <pubDate>Wed, 01 Mar 2023 20:14:05 +0100</pubDate>
      <guid>https://rnemet.dev/posts/k8s/metrics/</guid>
      <description>&lt;p&gt;Event-driven systems at the moment are dominating when it comes to software system design. Some of the characteristics of event-driven systems are &lt;em&gt;asynchronous
actions&lt;/em&gt; and &lt;em&gt;eventual consistency&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In traditional systems, each call will produce an immediate response. While in event-driven systems(EDS) the response is not immediate but it is made when
the system is ready to process a call. The EDS is not easy to debug or predict the next state. But we can try to understand what is happening in the system by looking
at the events produced by the system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying Database Changes For Microservices</title>
      <link>https://rnemet.dev/posts/k8s/deploy-liquibase/</link>
      <pubDate>Sat, 12 Feb 2022 20:14:05 +0100</pubDate>
      <guid>https://rnemet.dev/posts/k8s/deploy-liquibase/</guid>
      <description>&lt;p&gt;When a service works with a database its core is tied with the database schema. Usually, that means
that service models are represented in the database. Usually as tables, but not necessary.&lt;/p&gt;
&lt;p&gt;Anyway, from that comes a requirement to update database schema when the core of service is changed.
If you version your service then you should version your database schema as well. For this purpose,
the &lt;a href=&#34;https://liquibase.org/&#34;&gt;Liquibase&lt;/a&gt; is a good tool(or at least one that I like). In this example
I use the &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker-Compose: How To Rebuild Working Application</title>
      <link>https://rnemet.dev/posts/docker/compose-rebuild/</link>
      <pubDate>Wed, 02 Feb 2022 20:04:19 +0100</pubDate>
      <guid>https://rnemet.dev/posts/docker/compose-rebuild/</guid>
      <description>&lt;p&gt;While developing application and using docker-compose one question quickly arise:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to properly rebuild application?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once an image is built new one will not be built with the same tag as long it exists in a local cache.
The compose builds an image it names it with the pattern &lt;code&gt;&amp;lt;context&amp;gt;_&amp;lt;service_name&amp;gt;:latest&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Context is directory name where compose YAML is&lt;/li&gt;
&lt;li&gt;Service is service name in compose YAML file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that you can stop or takedown the compose application, next time you run it your images will not be
rebuilt if they already exist. Anyway, we aim to rebuild/restart only parts of the system that are changed.
Once the compose application is running, we only rebuild the service we are working on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker-Compose: What Every Developer Needs To Know</title>
      <link>https://rnemet.dev/posts/docker/compose-app/</link>
      <pubDate>Wed, 26 Jan 2022 22:12:24 +0100</pubDate>
      <guid>https://rnemet.dev/posts/docker/compose-app/</guid>
      <description>&lt;p&gt;If you are developing microservices, docker-compose(compose), can be a very powerful tool.
Think of a case with an API service and database. Creating and maintaining a database with the use
of &lt;a href=&#34;https://liquibase.org/&#34;&gt;the Liquibase&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;initial-plan&#34;&gt;Initial plan&lt;/h3&gt;
&lt;p&gt;&amp;hellip;would be:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;start DB&lt;/li&gt;
&lt;li&gt;run the Liquibase to make changes&lt;/li&gt;
&lt;li&gt;start an app&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Adding docker-compose as a driver to utilize this process:&lt;/p&gt;
&lt;script async type=&#34;application/javascript&#34; src=&#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&#34;&gt;
  var config = {
    startOnLoad:true,
    theme:&#39;neutral&#39;,
    align:&#39;left&#39;
  };
  mermaid.initialize(config);
&lt;/script&gt;

&lt;div class=&#34;mermaid&#34;&gt;
  
sequenceDiagram
    autonumber
    Docker --&gt;&gt; PostgresDB: start
    PostgresDB --&gt;&gt; PostgresDB: wait to finish start
    PostgresDB --&gt;&gt; Docker: done
    Docker --&gt;&gt; LiquibasePG: start
    LiquibasePGDB --&gt;&gt; PostgresDB: execute changeLog
    LiquibasePGDB --&gt;&gt; Docker: done
    Docker --&gt;&gt; Echo: start

&lt;/div&gt;
&lt;h3 id=&#34;postgresdb-setup&#34;&gt;PostgresDB Setup&lt;/h3&gt;
&lt;p&gt;This is the simplest step. According to &lt;a href=&#34;https://hub.docker.com/_/postgres&#34;&gt;the docs&lt;/a&gt;, this would be enough:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker-Compose: Intro</title>
      <link>https://rnemet.dev/posts/docker/compose-intro/</link>
      <pubDate>Sat, 08 Jan 2022 13:42:10 +0100</pubDate>
      <guid>https://rnemet.dev/posts/docker/compose-intro/</guid>
      <description>&lt;p&gt;Working with containers is a necessity today for developers. You will likely need
to work with some kind of storage or interact with some external service, like Solr or Postgres.&lt;/p&gt;
&lt;p&gt;You can install the required service on your local machine, which comes with the burden of choosing
the correct installation, configuration, etc&amp;hellip; Nothing too complicated but takes time.&lt;/p&gt;
&lt;h2 id=&#34;docker-and-containers&#34;&gt;Docker and Containers&lt;/h2&gt;
&lt;p&gt;In short, the container is an isolated process on the host machine. It runs in the isolated file system,
a container image. Docker would be a platform, a set of tools, for building, running, sharing applications packed
in the container image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes in the bottle: k3d and k3s</title>
      <link>https://rnemet.dev/posts/k3d/</link>
      <pubDate>Thu, 11 Mar 2021 22:40:14 +0100</pubDate>
      <guid>https://rnemet.dev/posts/k3d/</guid>
      <description>&lt;p&gt;Everyone wants to play with the Kubernetes(K8s). There are many options from Google, AWS, Heroku, etc. They offer free tiers that anyone can play with.
But what if you want to have your K8s. On your laptop, for fun or to learn something new, without any restrictions.&lt;/p&gt;
&lt;h2 id=&#34;what-is-k3s&#34;&gt;What is &lt;a href=&#34;https://k3s.io/&#34;&gt;k3s&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The K3s is lightweight k8s by &lt;a href=&#34;https://rancher.com/&#34;&gt;the rancher&lt;/a&gt; for Linux. K3s is intended to work with low resources and IoT devices.
So, it can easily run on laptops. It is packed as a single binary so it is easy to setup. It requires to have installed docker, as nodes will be run inside containers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to schedule task with crontab</title>
      <link>https://rnemet.dev/posts/schedule_tasks/</link>
      <pubDate>Mon, 15 Feb 2021 11:30:03 +0000</pubDate>
      <guid>https://rnemet.dev/posts/schedule_tasks/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m keeping notes in simple text files. Imho, this is a  straightforward solution that I can control. I need to be able to version my changes and to keep backup as well. For that, I&amp;rsquo;m using git.
But I have to make commits and push changes periodically.
I&amp;rsquo;m delegating this simple, dull, and repetitive toil to the &lt;em&gt;crontab&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;crontab&#34;&gt;Crontab&lt;/h2&gt;
&lt;p&gt;..is a file used by &lt;em&gt;cron&lt;/em&gt;. It is a time-based job scheduler available in Unix-like OS. It usually looks like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to rename multiple files</title>
      <link>https://rnemet.dev/posts/rename_files/</link>
      <pubDate>Fri, 01 Jan 2021 11:30:03 +0000</pubDate>
      <guid>https://rnemet.dev/posts/rename_files/</guid>
      <description>&lt;p&gt;A simple problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rename files with extension &lt;code&gt;xyz&lt;/code&gt; which names ends with &lt;code&gt;file&lt;/code&gt;. They need to start with &lt;code&gt;document-&lt;/code&gt; and have extension &lt;code&gt;txt&lt;/code&gt;
For example if a file is &lt;code&gt;1-file.xyz&lt;/code&gt; it should be renamed to &lt;code&gt;document-1.txt&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-cli&#34; data-lang=&#34;cli&#34;&gt;&amp;gt; ls -al
total 0
drwxr-xr-x  12 owner  staff  384 Jan  1 19:26 .
drwxr-xr-x   7 owner  staff  224 Oct 23 11:32 ..
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 1-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 10-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 2-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 3-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 4-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 5-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 6-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 7-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 8-file.xyz
-rw-r--r--   1 owner  staff    0 Jan  1 19:26 9-file.xyz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to this:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
