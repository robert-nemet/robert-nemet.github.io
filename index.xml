<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DevCube</title>
    <link>https://rnemet.dev/</link>
    <description>Recent content on DevCube</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 08 Mar 2023 22:23:12 +0100</lastBuildDate><atom:link href="https://rnemet.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Design Metrics With Prometheus Metric Types</title>
      <link>https://rnemet.dev/posts/k8s/metrics_types/</link>
      <pubDate>Wed, 08 Mar 2023 22:23:12 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/metrics_types/</guid>
      <description>This is the second part of a series about designing metrics for event-driven systems. You can check the first part of this series.
Prometheus is open source system for monitoring and alerting. It is a part of CNCF (Cloud Native Computing Foundation) and it is one of the most popular monitoring systems. You can say it is a de facto standard for monitoring in Kubernetes.
To design metrics with Prometheus, you need to understand its metric types.</description>
    </item>
    
    <item>
      <title>Understanding Event-Driven Metrics</title>
      <link>https://rnemet.dev/posts/k8s/metrics/</link>
      <pubDate>Wed, 01 Mar 2023 20:14:05 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/metrics/</guid>
      <description>Event-driven systems at the moment are dominating when it comes to software system design. Some of the characteristics of event-driven systems are asynchronous actions and eventual consistency.
In traditional systems, each call will produce an immediate response. While in event-driven systems(EDS) the response is not immediate but it is made when the system is ready to process a call. The EDS is not easy to debug or predict the next state.</description>
    </item>
    
    <item>
      <title>Practical k8s: Pods</title>
      <link>https://rnemet.dev/posts/practical_k8s/pods/</link>
      <pubDate>Mon, 24 Oct 2022 20:46:44 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/practical_k8s/pods/</guid>
      <description>A Pod would be the smallest deployable unit one can create and manage inside Kubernetes(K8s). In practice, rarely you create a Pod directly. Instead, one would create a Deployment, a StatefulSet, a DaemonSet, a Job, or a CronJob. These are higher-level constructs that would create Pods for you.
Here I&amp;rsquo;m covering common tasks that one would do with a Pod in daily work, like getting logs, opening a shell inside a container, debugging a Pod, etc.</description>
    </item>
    
    <item>
      <title>How to make exclusive locks in Kubernetes</title>
      <link>https://rnemet.dev/posts/projects/klock_exclusive_lock/</link>
      <pubDate>Sat, 01 Oct 2022 18:58:02 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/projects/klock_exclusive_lock/</guid>
      <description>Klock: Exclusive Lock Primer</description>
    </item>
    
    <item>
      <title>Klock</title>
      <link>https://rnemet.dev/posts/projects/klock/</link>
      <pubDate>Wed, 07 Sep 2022 18:58:02 +0200</pubDate>
      
      <guid>https://rnemet.dev/posts/projects/klock/</guid>
      <description>Easy and eficent way to lock Kubernetes resource</description>
    </item>
    
    <item>
      <title>Deploying Database Changes For Microservices</title>
      <link>https://rnemet.dev/posts/k8s/deploy-liquibase/</link>
      <pubDate>Sat, 12 Feb 2022 20:14:05 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k8s/deploy-liquibase/</guid>
      <description>When a service works with a database its core is tied with the database schema. Usually, that means that service models are represented in the database. Usually as tables, but not necessary.
Anyway, from that comes a requirement to update database schema when the core of service is changed. If you version your service then you should version your database schema as well. For this purpose, the Liquibase is a good tool(or at least one that I like).</description>
    </item>
    
    <item>
      <title>Docker-Compose: How To Rebuild Working Application</title>
      <link>https://rnemet.dev/posts/docker/compose-rebuild/</link>
      <pubDate>Wed, 02 Feb 2022 20:04:19 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/compose-rebuild/</guid>
      <description>While developing application and using docker-compose one question quickly arise:
How to properly rebuild application?
Once an image is built new one will not be built with the same tag as long it exists in a local cache. The compose builds an image it names it with the pattern &amp;lt;context&amp;gt;_&amp;lt;service_name&amp;gt;:latest.
Where:
Context is directory name where compose YAML is Service is service name in compose YAML file This means that you can stop or takedown the compose application, next time you run it your images will not be rebuilt if they already exist.</description>
    </item>
    
    <item>
      <title>Docker-Compose: What Every Developer Needs To Know</title>
      <link>https://rnemet.dev/posts/docker/compose-app/</link>
      <pubDate>Wed, 26 Jan 2022 22:12:24 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/compose-app/</guid>
      <description>If you are developing microservices, docker-compose(compose), can be a very powerful tool. Think of a case with an API service and database. Creating and maintaining a database with the use of the Liquibase.
Initial plan &amp;hellip;would be:
start DB run the Liquibase to make changes start an app Adding docker-compose as a driver to utilize this process:
sequenceDiagram autonumber Docker --&gt;&gt; PostgresDB: start PostgresDB --&gt;&gt; PostgresDB: wait to finish start PostgresDB --&gt;&gt; Docker: done Docker --&gt;&gt; LiquibasePG: start LiquibasePGDB --&gt;&gt; PostgresDB: execute changeLog LiquibasePGDB --&gt;&gt; Docker: done Docker --&gt;&gt; Echo: start PostgresDB Setup This is the simplest step.</description>
    </item>
    
    <item>
      <title>Docker-Compose: Intro</title>
      <link>https://rnemet.dev/posts/docker/compose-intro/</link>
      <pubDate>Sat, 08 Jan 2022 13:42:10 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/docker/compose-intro/</guid>
      <description>Working with containers is a necessity today for developers. You will likely need to work with some kind of storage or interact with some external service, like Solr or Postgres.
You can install the required service on your local machine, which comes with the burden of choosing the correct installation, configuration, etc&amp;hellip; Nothing too complicated but takes time.
Docker and Containers In short, the container is an isolated process on the host machine.</description>
    </item>
    
    <item>
      <title>Kubernetes in the bottle: k3d and k3s</title>
      <link>https://rnemet.dev/posts/k3d/</link>
      <pubDate>Thu, 11 Mar 2021 22:40:14 +0100</pubDate>
      
      <guid>https://rnemet.dev/posts/k3d/</guid>
      <description>Everyone wants to play with the Kubernetes(K8s). There are many options from Google, AWS, Heroku, etc. They offer free tiers that anyone can play with. But what if you want to have your K8s. On your laptop, for fun or to learn something new, without any restrictions.
What is k3s The K3s is lightweight k8s by the rancher for Linux. K3s is intended to work with low resources and IoT devices.</description>
    </item>
    
    <item>
      <title>How to schedule task with crontab</title>
      <link>https://rnemet.dev/posts/schedule_tasks/</link>
      <pubDate>Mon, 15 Feb 2021 11:30:03 +0000</pubDate>
      
      <guid>https://rnemet.dev/posts/schedule_tasks/</guid>
      <description>I&amp;rsquo;m keeping notes in simple text files. Imho, this is a straightforward solution that I can control. I need to be able to version my changes and to keep backup as well. For that, I&amp;rsquo;m using git. But I have to make commits and push changes periodically. I&amp;rsquo;m delegating this simple, dull, and repetitive toil to the crontab.
Crontab ..is a file used by cron. It is a time-based job scheduler available in Unix-like OS.</description>
    </item>
    
    <item>
      <title>How to rename multiple files</title>
      <link>https://rnemet.dev/posts/rename_files/</link>
      <pubDate>Fri, 01 Jan 2021 11:30:03 +0000</pubDate>
      
      <guid>https://rnemet.dev/posts/rename_files/</guid>
      <description>A simple problem:
Rename files with extension xyz which names ends with file. They need to start with document- and have extension txt For example if a file is 1-file.xyz it should be renamed to document-1.txt
From this:
&amp;gt; ls -al total 0 drwxr-xr-x 12 owner staff 384 Jan 1 19:26 . drwxr-xr-x 7 owner staff 224 Oct 23 11:32 .. -rw-r--r-- 1 owner staff 0 Jan 1 19:26 1-file.xyz -rw-r--r-- 1 owner staff 0 Jan 1 19:26 10-file.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://rnemet.dev/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rnemet.dev/about/</guid>
      <description>Hello friend,
I’m a simple guy who loves computers and technology. Here I’m spilling all my thought about software, computers, technology, and work culture.
I’m sharing things that I worked on. If you are interested subscribe to not miss new posts in the newsletter and on my website. If you like it please share and let me know. If you do not like it let me know why.</description>
    </item>
    
  </channel>
</rss>
